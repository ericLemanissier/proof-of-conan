name: Manual trigger

on:
  workflow_dispatch:
    inputs:
      repository:
        required: true
        default: 'conan-io/conan-center-index'
      ref:
        required: true
        default: 'master'
      path:
        required: true
        default: 'recipes/qt/6.x.x'
      version:
        required: true
        default: '6.5.1'

permissions:
  contents: read

jobs:
  summary:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Building Conan Package" >> $GITHUB_STEP_SUMMARY
          echo "- repo: ${{ github.event.inputs.repository }}" >> $GITHUB_STEP_SUMMARY
          echo "- gitref: ${{ github.event.inputs.ref }}" >> $GITHUB_STEP_SUMMARY
          echo "- path: ${{ github.event.inputs.path }}" >> $GITHUB_STEP_SUMMARY
          echo "- version: ${{ github.event.inputs.version }}" >> $GITHUB_STEP_SUMMARY
    
  _:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-11]
        shared: ["True", "False"]
    continue-on-error: true
    env:
      NOT_ON_C3I: 1
      PKG_VERSION: ${{ github.event.inputs.version }}
      PKG_PATH: ${{ github.event.inputs.path }}
    steps:    
      - uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.repository }}
          ref: ${{ github.event.inputs.ref }}
      - uses: actions/setup-python@v5
        with:
          python-version: "3.8"
      - run: pip3 install conan yq

      - name: set conan home
        if: ${{ runner.os == 'Windows' }}
        shell: bash
        run: echo "CONAN_HOME=${{ runner.temp }}\\.c2" >> $GITHUB_ENV
        
      - run: conan profile detect --force
        shell: bash
          
      - name: conan create
        shell: bash
        env:
          CONAN_SYSREQUIRES_MODE: enabled
        run: |
        
          echo "| os | shared | cppstd | result |" >> $GITHUB_STEP_SUMMARY
          echo "| -- | ------ | ------ | ------ |" >> $GITHUB_STEP_SUMMARY
          PROFILE_PATH=$(conan profile path default)
          COMPILER=$(awk -F "=" '/^compiler=/ {print $2}' $PROFILE_PATH)
          COMPILER_VERSION=$(awk -F "=" '/^compiler.version=/ {print $2}' $PROFILE_PATH)
          echo "$PROFILE_PATH $COMPILER $COMPILER_VERSION"
          CPP_STDS=$(curl https://github.com/conan-io/conan-center-index/raw/master/.c3i/config_v2.yml -L | yq -r -c .cppstd.\"$COMPILER\".\"$COMPILER_VERSION\"[])
          for cpp_std in $CPP_STDS; do
              cpp_std=$(echo $cpp_std | tr -d '[:space:]')
              code=0
              set +o pipefail
              conan create -s compiler.cppstd=$cpp_std --version $PKG_VERSION --build=missing $PKG_PATH -o */*:shared=${{ matrix.shared }} -c tools.system.package_manager:mode=install -c tools.system.package_manager:sudo=True || code=$?
              echo $code
              case $code in
                0)
                  ICON=":white_check_mark:"
                  ;;
                6)
                  ICON=":arrow_right_hook:"
                  ;;
                1)
                  ICON=":x:"
                  ;;
                *)
                  ICON=":interrobang: $code"
                  ;;
              esac
              echo "| ${{ matrix.os }} | ${{ matrix.shared }} | $cpp_std | $ICON |" >> $GITHUB_STEP_SUMMARY
              if [ $code -ne 6 ]; then
                  break
              fi
          done
          exit "$code"
